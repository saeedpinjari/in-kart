{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass FilterPipe {\n  transform(value, filterString, propName) {\n    const result = [];\n    if (!value || filterString === '' || propName === '') {\n      return value;\n    }\n    value.forEach(a => {\n      if (a[propName].trim().toLowerCase().includes(filterString.toLowerCase())) {\n        result.push(a);\n      }\n    });\n    return result;\n  }\n}\n_class = FilterPipe;\n_class.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});\nexport { FilterPipe };","map":{"version":3,"names":["FilterPipe","transform","value","filterString","propName","result","forEach","a","trim","toLowerCase","includes","push","pure"],"sources":["C:\\Users\\user\\coding\\dance website\\in-kart\\src\\app\\shared\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value : any[], filterString: string, propName:string): any[] {\n    const result:any =[];\n    if(!value || filterString==='' || propName===''){\n      return value;\n    }\n    value.forEach((a:any)=>{\n      if(a[propName].trim().toLowerCase().includes(filterString.toLowerCase())){\n        result.push(a);\n      }\n    }\n    );\n    return result;\n  }\n\n}\n"],"mappings":";;AAEA,MAGaA,UAAU;EAErBC,SAASA,CAACC,KAAa,EAAEC,YAAoB,EAAEC,QAAe;IAC5D,MAAMC,MAAM,GAAM,EAAE;IACpB,IAAG,CAACH,KAAK,IAAIC,YAAY,KAAG,EAAE,IAAIC,QAAQ,KAAG,EAAE,EAAC;MAC9C,OAAOF,KAAK;;IAEdA,KAAK,CAACI,OAAO,CAAEC,CAAK,IAAG;MACrB,IAAGA,CAAC,CAACH,QAAQ,CAAC,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,YAAY,CAACM,WAAW,EAAE,CAAC,EAAC;QACvEJ,MAAM,CAACM,IAAI,CAACJ,CAAC,CAAC;;IAElB,CAAC,CACA;IACD,OAAOF,MAAM;EACf;;SAdWL,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAY,IAAA;AAAA;SAAVZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}